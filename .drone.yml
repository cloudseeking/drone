---
kind: pipeline
type: kubernetes
name: Terraform Plan & Apply

trigger:
  branch:
  - main
  when:
    event:
      exclude:
      - pull_request   

steps:
- name: setup-ssh
  image: alpine:latest
  commands:
  - apk add --no-cache openssh-client git
  - mkdir -p /root/.ssh
  - echo -n "$${SSH_KEY}" > /root/.ssh/id_rsa
  - chmod 600 /root/.ssh/id_rsa
  - touch /root/.ssh/known_hosts
  - chmod 600 /root/.ssh/known_hosts
  - ssh-keyscan -H github.com > /root/.ssh/known_hosts
  - git config --global url."git@github.com:".insteadOf "https://github.com/"
  environment:
    SSH_KEY:
      from_secret: SSH_KEY
  volumes:
  - name: ssh-keys
    path: /root/.ssh

- name: terraform
  image: jmccann/drone-terraform:1
  depends_on: [setup-ssh]
  settings:
    actions:
      - init
      - validate
      - plan
      - apply
    plan: true
    root_dir: .
    parallelism: 4
    sensitive: true
    vars:
      ARM_CLIENT_ID:
        from_secret: ARM_CLIENT_ID
      ARM_CLIENT_SECRET:
        from_secret: ARM_CLIENT_SECRET 
      ARM_SUBSCRIPTION_ID:
        from_secret: ARM_SUBSCRIPTION_ID
      ARM_TENANT_ID:
        from_secret: ARM_TENANT_ID
    env:
      GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no -i /root/.ssh/id_rsa"
      SSH_KEY:
        from_secret: SSH_KEY
  volumes:
  - name: ssh-keys
    path: /root/.ssh

volumes:
- name: ssh-keys
  temp: {}