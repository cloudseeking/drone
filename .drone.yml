---
kind: pipeline
type: kubernetes
name: Terraform PR

# trigger:
#   event:
#   - pull_request

steps:
- name: setup-ssh
  image: debian:bullseye-slim
  commands:
  - apt-get update && apt-get install -y openssh-client git
  - mkdir -p /root/.ssh
  - echo "$${SSH_KEY}" > /root/.ssh/id_rsa
  - chmod 600 /root/.ssh/id_rsa
  - ssh-keyscan -H github.com > /root/.ssh/known_hosts
  - git config --global url."git@github.com:".insteadOf "https://github.com/"
  environment:
    SSH_KEY:
      from_secret: SSH_KEY
  volumes:
  - name: ssh-keys
    path: /root/.ssh

- name: terraform-fmt
  image: jmccann/drone-terraform:latest
  depends_on: [setup-ssh]
  settings:
    actions:
      - fmt
    fmt_options:
      write: false
      diff: true
      check: true
  volumes:
  - name: ssh-keys
    path: /root/.ssh

- name: terraform-plan
  image: jmccann/drone-terraform:latest
  depends_on: [terraform-fmt]
  settings:
    actions:
      - init
      - validate
      - plan
  environment:
    ARM_CLIENT_ID:
      from_secret: ARM_CLIENT_ID
    ARM_CLIENT_SECRET:
      from_secret: ARM_CLIENT_SECRET 
    ARM_SUBSCRIPTION_ID:
      from_secret: ARM_SUBSCRIPTION_ID
    ARM_TENANT_ID:
      from_secret: ARM_TENANT_ID
    GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no -i /root/.ssh/id_rsa"
  volumes:
  - name: ssh-keys
    path: /root/.ssh

volumes:
- name: ssh-keys
  temp: {}

---
kind: pipeline
type: kubernetes
name: Terraform Apply

trigger:
  branch:
  - main
  event:
  - push
  
steps:
- name: setup-ssh
  image: debian:bullseye-slim
  commands:
  - apt-get update && apt-get install -y openssh-client git
  - mkdir -p /root/.ssh
  - echo "$${SSH_KEY}" > /root/.ssh/id_rsa
  - chmod 600 /root/.ssh/id_rsa
  - ssh-keyscan -H github.com > /root/.ssh/known_hosts
  - git config --global url."git@github.com:".insteadOf "https://github.com/"
  environment:
    SSH_KEY:
      from_secret: SSH_KEY
  volumes:
  - name: ssh-keys
    path: /root/.ssh

- name: terraform-validate
  image: jmccann/drone-terraform:latest
  depends_on: [setup-ssh]
  settings:
    actions:
      - init
      - fmt
      - validate
  environment:
    ARM_CLIENT_ID:
      from_secret: ARM_CLIENT_ID
    ARM_CLIENT_SECRET:
      from_secret: ARM_CLIENT_SECRET 
    ARM_SUBSCRIPTION_ID:
      from_secret: ARM_SUBSCRIPTION_ID
    ARM_TENANT_ID:
      from_secret: ARM_TENANT_ID
    GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no -i /root/.ssh/id_rsa"
  volumes:
  - name: ssh-keys
    path: /root/.ssh

- name: terraform-plan
  image: jmccann/drone-terraform:latest
  depends_on: [terraform-validate]
  settings:
    actions:
      - plan
  environment:
    ARM_CLIENT_ID:
      from_secret: ARM_CLIENT_ID
    ARM_CLIENT_SECRET:
      from_secret: ARM_CLIENT_SECRET 
    ARM_SUBSCRIPTION_ID:
      from_secret: ARM_SUBSCRIPTION_ID
    ARM_TENANT_ID:
      from_secret: ARM_TENANT_ID
    GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no -i /root/.ssh/id_rsa"
  volumes:
  - name: ssh-keys
    path: /root/.ssh

- name: terraform-apply
  image: jmccann/drone-terraform:latest
  depends_on: [terraform-plan]
  settings:
    actions:
      - apply
  environment:
    ARM_CLIENT_ID:
      from_secret: ARM_CLIENT_ID
    ARM_CLIENT_SECRET:
      from_secret: ARM_CLIENT_SECRET 
    ARM_SUBSCRIPTION_ID:
      from_secret: ARM_SUBSCRIPTION_ID
    ARM_TENANT_ID:
      from_secret: ARM_TENANT_ID
    GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no -i /root/.ssh/id_rsa"
  volumes:
  - name: ssh-keys
    path: /root/.ssh

volumes:
- name: ssh-keys
  temp: {}