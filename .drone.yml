---
kind: pipeline
type: kubernetes
name: üöÄ Terraform Workflow

trigger:
  branch:
  - main
  event:
  - push
  - custom

steps:
- name: setup-environment
  image: debian:bullseye-slim
  commands:
  - apt-get update && apt-get install -y openssh-client git jq
  - mkdir -p /root/.ssh
  - echo "$${SSH_KEY}" > /root/.ssh/id_rsa
  - chmod 600 /root/.ssh/id_rsa
  - ssh-keyscan -H github.com > /root/.ssh/known_hosts
  - git config --global url."git@github.com:".insteadOf "https://github.com/"
  - echo "Verificando ambiente..."
  environment:
    SSH_KEY:
      from_secret: SSH_KEY
    ARM_CLIENT_ID:
      from_secret: ARM_CLIENT_ID
    ARM_CLIENT_SECRET:
      from_secret: ARM_CLIENT_SECRET
    ARM_SUBSCRIPTION_ID:
      from_secret: ARM_SUBSCRIPTION_ID
    ARM_TENANT_ID:
      from_secret: ARM_TENANT_ID
  volumes:
  - name: ssh-keys
    path: /root/.ssh

- name: terraform-fmt
  image: hashicorp/terraform:latest
  depends_on: [setup-environment]
  commands:
  - cd /drone/src
  - echo "Formatando e validando arquivos Terraform..."
  - terraform fmt -check -diff -recursive || true
  volumes:
  - name: ssh-keys
    path: /root/.ssh

- name: terraform-init
  image: hashicorp/terraform:latest
  depends_on: [terraform-fmt]
  commands:
  - cd /drone/src
  - echo "Inicializando Terraform..."
  - terraform init
  environment:
    ARM_CLIENT_ID:
      from_secret: ARM_CLIENT_ID
    ARM_CLIENT_SECRET:
      from_secret: ARM_CLIENT_SECRET 
    ARM_SUBSCRIPTION_ID:
      from_secret: ARM_SUBSCRIPTION_ID
    ARM_TENANT_ID:
      from_secret: ARM_TENANT_ID
    GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no -i /root/.ssh/id_rsa"
  volumes:
  - name: ssh-keys
    path: /root/.ssh

- name: terraform-validate
  image: hashicorp/terraform:latest
  depends_on: [terraform-init]
  commands:
  - cd /drone/src
  - echo "Validando configura√ß√£o..."
  - terraform validate
  environment:
    ARM_CLIENT_ID:
      from_secret: ARM_CLIENT_ID
    ARM_CLIENT_SECRET:
      from_secret: ARM_CLIENT_SECRET 
    ARM_SUBSCRIPTION_ID:
      from_secret: ARM_SUBSCRIPTION_ID
    ARM_TENANT_ID:
      from_secret: ARM_TENANT_ID
  volumes:
  - name: ssh-keys
    path: /root/.ssh

- name: terraform-plan
  image: hashicorp/terraform:latest
  depends_on: [terraform-validate]
  commands:
  - cd /drone/src
  - echo "Gerando plano de execu√ß√£o..."
  - terraform plan -out=tfplan
  environment:
    ARM_CLIENT_ID:
      from_secret: ARM_CLIENT_ID
    ARM_CLIENT_SECRET:
      from_secret: ARM_CLIENT_SECRET 
    ARM_SUBSCRIPTION_ID:
      from_secret: ARM_SUBSCRIPTION_ID
    ARM_TENANT_ID:
      from_secret: ARM_TENANT_ID
    GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no -i /root/.ssh/id_rsa"
  volumes:
  - name: ssh-keys
    path: /root/.ssh

- name: terraform-apply
  image: hashicorp/terraform:latest
  depends_on: [terraform-plan]
  commands:
  - cd /drone/src
  - echo "Aplicando infraestrutura..."
  - terraform apply -auto-approve tfplan
  - echo "Coletando outputs da infraestrutura..."
  - terraform output -json > terraform_output.json || echo "{}" > terraform_output.json
  environment:
    ARM_CLIENT_ID:
      from_secret: ARM_CLIENT_ID
    ARM_CLIENT_SECRET:
      from_secret: ARM_CLIENT_SECRET 
    ARM_SUBSCRIPTION_ID:
      from_secret: ARM_SUBSCRIPTION_ID
    ARM_TENANT_ID:
      from_secret: ARM_TENANT_ID
    GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no -i /root/.ssh/id_rsa"
  volumes:
  - name: ssh-keys
    path: /root/.ssh

- name: save-access-info
  image: debian:bullseye-slim
  depends_on: [terraform-apply]
  commands:
  - cd /drone/src
  - echo "SALVANDO INFORMA√á√ïES DE ACESSO √Ä VM"
  - apt-get update && apt-get install -y jq
  - mkdir -p ./terraform_outputs
  - jq -r '.vm_sqctrl.value.network_interface_private_ips | .[0]' terraform_output.json > ./terraform_outputs/vm_private_ip.txt || echo "Output n√£o dispon√≠vel" > ./terraform_outputs/vm_private_ip.txt
  - jq -r '.vm_sqctrl.value.vm_names | .[0]' terraform_output.json > ./terraform_outputs/vm_name.txt || echo "Output n√£o dispon√≠vel" > ./terraform_outputs/vm_name.txt
  - cat /root/.ssh/id_rsa > ./terraform_outputs/id_rsa
  - chmod 600 ./terraform_outputs/id_rsa
  - VM_IP=$(cat ./terraform_outputs/vm_private_ip.txt)
  - echo "ssh -i id_rsa adminuser@$VM_IP" > ./terraform_outputs/ssh_command.txt
  - echo "Informa√ß√µes salvas com sucesso!"
  - ls -la ./terraform_outputs/
  environment:
    ARM_CLIENT_ID:
      from_secret: ARM_CLIENT_ID
    ARM_CLIENT_SECRET:
      from_secret: ARM_CLIENT_SECRET 
    ARM_SUBSCRIPTION_ID:
      from_secret: ARM_SUBSCRIPTION_ID
    ARM_TENANT_ID:
      from_secret: ARM_TENANT_ID
  volumes:
  - name: ssh-keys
    path: /root/.ssh
  - name: outputs
    path: /drone/src/terraform_outputs

- name: publicar-artefatos
  image: drillster/drone-volume-cache
  depends_on: [save-access-info]
  volumes:
  - name: outputs
    path: /drone/src/terraform_outputs
  settings:
    restore: false
    mount:
      - ./terraform_outputs
    
volumes:
- name: ssh-keys
  temp: {}
- name: outputs
  host:
    path: /tmp/drone-artifacts/${DRONE_REPO_NAME}/${DRONE_BUILD_NUMBER}